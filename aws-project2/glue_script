import sys
from awsglue.transforms import *
from awsglue.utils import getResolvedOptions
from pyspark.context import SparkContext
from awsglue.context import GlueContext
from awsglue.job import Job

args = getResolvedOptions(sys.argv, ['JOB_NAME'])
sc = SparkContext()
glueContext = GlueContext(sc)
spark = glueContext.spark_session
job = Job(glueContext)
job.init(args['JOB_NAME'], args)

#  Load data from Glue Catalog
datasource = glueContext.create_dynamic_frame.from_catalog(
    database="etl_db",
    table_name="rohaan_etl_input"
)

# Clean / transform data
# Example: remove rows with missing values
cleaned_data = datasource.drop_null_fields()

#  Write cleaned data back to S3
output_path = "s3://rohaan-etl-output/cleaned_data/"
glueContext.write_dynamic_frame.from_options(
    frame=cleaned_data,
    connection_type="s3",
    connection_options={"path": output_path},
    format="csv"
)

job.commit()
